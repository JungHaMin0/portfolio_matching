<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mypageMapper">
	<!-- 구매 내역 -->
	<select id="pmPurchase_list" parameterType="String" resultType="com.spring.ex.vo.Deal_PortVO">
		SELECT * FROM deal, portfolio
		WHERE deal_portfolio_id = portfolio_id
		AND deal_purUser = #{user_id};
	</select>
	
	<!-- 구매 내역 - 구매 확정 기능 -->
	<update id="pmPurchaseConfirm" parameterType="String">
		UPDATE deal SET
		deal_status = '구매 확정'
		WHERE deal_id = #{deal_id};
	</update>
	
	<!-- 구매 내역 - 후기 작성 -->
	<insert id="pmPurchaseReview">
		INSERT INTO review(
			review_portfolio_id,
			review_userId,
			review_rating,
			review_title,
			review_content
		) VALUES (
			#{review_portfolio_id},
			#{review_userId},
			#{review_rating},
			#{review_title},
			#{review_content}
		)
	</insert>
	<!-- 관심 상품 -->
	<select id="pmInterestList" parameterType="String" resultType="com.spring.ex.vo.PortfolioVO">
		SELECT portfolio.* FROM scrap, portfolio
		WHERE scrap_portfolio_id = portfolio_id
		AND scrap_userId = #{user_id}
	</select>
	
	
	<!-- 문의 내역(구매) -->
	<select id="pmInquiryList" resultType="com.spring.ex.vo.Deal_Port_InqVO">
		SELECT * FROM inquiry, deal, portfolio
		WHERE inq_deal_id = deal_id
		AND deal_portfolio_id = portfolio_id
		AND inq_purUser = #{user_id}
		ORDER BY inq_id DESC;
	</select>
	
	<!-- 문의 내역(구매) - 문의 작성 기능 -->
	<insert id="pmInquiryWrite">
		INSERT INTO inquiry(
			inq_deal_id,
			inq_purUser,
			inq_title,
			inq_content
		) VALUES (
			#{inq_deal_id},
			#{inq_purUser},
			#{inq_title},
			#{inq_content}
		);
	</insert>
	
	<!-- 문의 내역(구매) - 답변 읽기 기능1 -->
	<select id="pmInquiryRead" parameterType="int" resultType="com.spring.ex.vo.InquiryVO">
		SELECT * FROM inquiry
		WHERE inq_id = #{inq_id};
	</select>
	
	<!-- 문의 내역(구매) - 답변 읽기 기능2 -->
	<select id="pmAnswerRead" parameterType="int" resultType="com.spring.ex.vo.AnswerVO">
		SELECT * FROM answer
		WHERE ans_inq_id = #{inq_id};
	</select>
	
	<!-- 판매 중 -->
	<select id="smSaleList" parameterType="String" resultType="com.spring.ex.vo.PortfolioVO">
		SELECT * FROM portfolio
		WHERE portfolio_userId = #{user_id};
	</select>
	
	<!-- 거래 현황 -->
	<select id="smDealList" parameterType="int" resultType="com.spring.ex.vo.Deal_PortVO">
		SELECT * FROM deal, portfolio
		WHERE deal_portfolio_id = portfolio_id
		AND portfolio_id = #{portfolio_id};
	</select>
	
	<!-- 거래 현황 - 작업 중으로 변경 -->
	<update id="smDealWorking" parameterType="int">
		UPDATE deal SET deal_status = '작업 중'
		WHERE deal_id = #{deal_id};
	</update>
	
	<!-- 거래 현황 - 작업 중으로 변경 -->
	<update id="smDealComplete" parameterType="int">
		UPDATE deal SET deal_status = '작업 완료'
		WHERE deal_id = #{deal_id};
	</update>
	
	<!-- 수익 현황 -->
	<select id="smProfitList" parameterType="String" resultType="com.spring.ex.vo.Deal_PortVO">
		SELECT * FROM deal, portfolio
		WHERE deal_portfolio_id = portfolio_id
		AND deal_saleUser = #{user_id}
		AND deal_status = '구매 확정'
		ORDER BY deal_date DESC;
	</select>
	
	<!-- 문의 내역(판매) -->
	<select id="smInquiryList" parameterType="String" resultType="com.spring.ex.vo.Deal_Port_InqVO">
		SELECT * FROM inquiry, deal, portfolio
		WHERE inq_deal_id = deal_id
		AND deal_portfolio_id = portfolio_id
		AND deal_saleUser = #{user_id}
		ORDER BY portfolio_id;
	</select>
	
	<!-- 문의 내역(판매) - 답변 하기 -->
	<select id="smInquiryRead" parameterType="int" resultType="com.spring.ex.vo.InquiryVO">
		SELECT * FROM inquiry
		WHERE inq_id = #{inq_id};
	</select>
	
	<!-- 문의 내역(판매) - 답변 하기 기능 -->
	<insert id="smAnswerWrite">
		INSERT INTO answer(
			ans_deal_id,
			ans_inq_id,
			ans_saleUser,
			ans_content
		) VALUES (
			#{ans_deal_id},
			#{ans_inq_id},
			#{ans_saleUser},
			#{ans_content}
		);
	</insert>
	
	<!-- 내 정보 수정 - 수정 기능 -->
	<update id="userUpdate">
		UPDATE user SET
		user_name = #{user_name},
		user_phone = #{user_phone},
		user_email = #{user_email}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 내 정보 수정 - 비밀번호 수정 기능 -->
	<update id="userPwUpdate">
		UPDATE user SET
		user_pw = #{user_pw}
		WHERE user_id = #{user_id}
	</update>
	
	<!-- 회원 탈퇴 - 탈퇴 기능 -->
	<delete id="userDelete">
		DELETE FROM USER
		WHERE user_id = #{user_id}
	</delete>
</mapper>