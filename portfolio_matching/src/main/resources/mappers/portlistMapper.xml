<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="portlistMapper">
   <select id="portlist" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
   
   SELECT *
   FROM portfolio
   ORDER BY portfolio_rating DESC
   
   </select>
   
   <select id="webcg" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
   
   SELECT portfolio_category_sub, portfolio_title, portfolio_content, portfolio_term, portfolio_thumbUrl, portfolio_rating
   FROM portfolio
   WHERE portfolio_category_sub LIKE 'web'
   ORDER BY portfolio_rating DESC
   
   </select>
   
   <select id="appcg" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
   
   SELECT portfolio_category_sub, portfolio_title, portfolio_content, portfolio_term, portfolio_thumbUrl, portfolio_rating
   FROM portfolio
   WHERE portfolio_category_sub LIKE 'app'
   ORDER BY portfolio_rating DESC
   
   </select>
   
   <select id="designcg" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
   
   SELECT portfolio_category_sub, portfolio_title, portfolio_content, portfolio_term, portfolio_thumbUrl, portfolio_rating
   FROM portfolio
   WHERE portfolio_category_sub LIKE 'design'
   ORDER BY portfolio_rating DESC
   
   </select>
   
   <select id="photocg" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
   
   SELECT portfolio_category_sub, portfolio_title, portfolio_content, portfolio_term, portfolio_thumbUrl, portfolio_rating
   FROM portfolio
   WHERE portfolio_category_sub LIKE 'photo'
   ORDER BY portfolio_rating DESC
   
   </select>
   
   <select id="main" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
   SELECT *
	FROM portfolio
	ORDER BY portfolio_regDate DESC
	LIMIT 0, 1
   </select>
   
   <select id="main2" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
	SELECT * FROM portfolio
	WHERE portfolio_regDate = (SELECT DISTINCT(portfolio_regDate) FROM portfolio as e1
	WHERE (SELECT COUNT(DISTINCT(portfolio_regDate))=2 FROM portfolio as e2
	WHERE e1.portfolio_regDate <![CDATA[<=]]> e2.portfolio_regDate)) ORDER BY portfolio_title
	LIMIT 0, 1
   </select>
    <select id="main3" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
	SELECT * FROM portfolio
	WHERE portfolio_regDate = (SELECT DISTINCT(portfolio_regDate) FROM portfolio as e1
	WHERE (SELECT COUNT(DISTINCT(portfolio_regDate))=3 FROM portfolio as e2
	WHERE e1.portfolio_regDate <![CDATA[<=]]> e2.portfolio_regDate)) ORDER BY portfolio_title
	LIMIT 0, 1
   </select>
    <select id="main4" resultType="com.spring.ex.portfolio.domain.PortfolioVO">
	SELECT * FROM portfolio
	WHERE portfolio_regDate = (SELECT DISTINCT(portfolio_regDate) FROM portfolio as e1
	WHERE (SELECT COUNT(DISTINCT(portfolio_regDate))=4 FROM portfolio as e2
	WHERE e1.portfolio_regDate <![CDATA[<=]]> e2.portfolio_regDate)) ORDER BY portfolio_title
	LIMIT 0, 1
   </select>

    <sql id="searchCondition">
    <if test="searchType != null">
        <if test="searchType == 't'.toString()">
        where portfolio_title like CONCAT("%", #{keyword} ,"%") 
        </if>
 		 <if test="searchType == 'C'.toString()">
        where portfolio_content like CONCAT("%", #{keyword} ,"%") 
        </if>
         <if test="searchType == 'id'.toString()">
        where portfolio_userId like CONCAT("%", #{keyword} ,"%") 
        </if>
    </if>   
    </sql>
    
    <select id="list" resultType="com.spring.ex.portfolio.domain.PortfolioVO" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT *
    FROM portfolio
    <include refid="searchCondition"></include>
    order by  portfolio_rating DESC
    limit #{pageStart}, #{perPageNum}
    </select>
    

 
     <select id="web" resultType="com.spring.ex.portfolio.domain.PortfolioVO" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT *
    FROM portfolio
    WHERE portfolio_category_sub LIKE 'web'
    <include refid="searchCondition"></include>
    limit #{pageStart}, #{perPageNum}
    </select>
 
 
 
    <select id="app" resultType="com.spring.ex.portfolio.domain.PortfolioVO" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT *
    FROM portfolio
    WHERE portfolio_category_sub LIKE 'app'
    <include refid="searchCondition"></include>
    order by portfolio_rating DESC
    limit #{pageStart}, #{perPageNum}
    </select>
 
 
 
    <select id="design" resultType="com.spring.ex.portfolio.domain.PortfolioVO" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT *
    FROM portfolio
     WHERE portfolio_category_sub LIKE 'design'
    <include refid="searchCondition"></include>
    order by portfolio_rating DESC
    limit #{pageStart}, #{perPageNum}
    </select>
 
 
 
    <select id="photo" resultType="com.spring.ex.portfolio.domain.PortfolioVO" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT *
    FROM portfolio
    WHERE portfolio_category_sub LIKE 'photo'
    <include refid="searchCondition"></include>
    order by portfolio_rating DESC
    limit #{pageStart}, #{perPageNum}
    </select>
 
 
 
 
    <select id="CountWeb" resultType="java.lang.Integer" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT COUNT(*) FROM portfolio 
    WHERE portfolio_category_sub LIKE 'web'
 <include refid="searchCondition"></include>
    </select>
    <select id="CountApp" resultType="java.lang.Integer" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT COUNT(*) FROM portfolio 
    WHERE portfolio_category_sub LIKE 'app'
 <include refid="searchCondition"></include>
    </select>
    <select id="CountDesign" resultType="java.lang.Integer" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT COUNT(*) FROM portfolio 
    WHERE portfolio_category_sub LIKE 'design'
 <include refid="searchCondition"></include>
    </select>
    
    <select id="CountPhoto" resultType="java.lang.Integer" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT COUNT(*) FROM portfolio 
      WHERE portfolio_category_sub LIKE 'photo'
 <include refid="searchCondition"></include>
    </select>
    
    <select id="Count" resultType="java.lang.Integer" parameterType="com.spring.ex.portfolio.domain.SearchCriteria">
    SELECT COUNT(*) FROM portfolio 
 <include refid="searchCondition"></include>
    </select>
   
 
   <select id="selectMap" resultMap="selectMapList">    
        SELECT
	COUNT(portfolio_category_main) as a,
	COUNT(CASE WHEN portfolio_category_sub='web' THEN 1 END)as b,
	COUNT(CASE WHEN portfolio_category_sub='app' THEN 1 END)as c,
	COUNT(CASE WHEN portfolio_category_sub='design' THEN 1 END)as d,
	COUNT(CASE WHEN portfolio_category_sub='photo' THEN 1 END)as e
from portfolio
    </select>
 
    <resultMap type="HashMap" id="selectMapList">
        <result column="a" property="a"/>
        <result column="b" property="b"/>
        <result column="c" property="c"/>
        <result column="d" property="d"/>
        <result column="e" property="e"/>
       
    </resultMap>
   
   
   
  
<!--    <select id="countAll" resultType="com.spring.ex.vo.PortfolioVO">
  
 	SELECT COUNT(*)
	FROM portfolio
	GROUP BY portfolio_category_sub DESC
  
  </select>
  
  <select id="countWeb" resultType="com.spring.ex.vo.PortfolioVO">
  
 	SELECT COUNT(*)
	FROM portfolio
	WHERE portfolio_category_sub = 'web'
  
  </select>
  
    <select id="countWeb" resultType="com.spring.ex.vo.PortfolioVO">
  
 	SELECT COUNT(*)
	FROM portfolio
	WHERE portfolio_category_sub = 'app'
  
  </select>
  
    <select id="countWeb" resultType="com.spring.ex.vo.PortfolioVO">
  
 	SELECT COUNT(*)
	FROM portfolio
	WHERE portfolio_category_sub = 'design'
  
  </select>
  
    <select id="countWeb" resultType="com.spring.ex.vo.PortfolioVO">
  
 	SELECT COUNT(*)
	FROM portfolio
	WHERE portfolio_category_sub = 'photo'
  
  </select> -->
  
</mapper>